{"ast":null,"code":"var _jsxFileName = \"/Users/synakhanna/Desktop/mobile_app_class/to-do-list/todo-v3 (midterm)/src/context/Todos.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport { createContext, useState, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoContext = /*#__PURE__*/createContext();\nfunction Provider({\n  children\n}) {\n  _s();\n  const [todos, setTodos] = useState([]);\n\n  // MUCH more common, wrap the funciton in useCallback inline\n  // useCallback memoizes fetchTodos one copy in memory and we always\n  // reference the same slot in computer's memory so it SHOULD never update\n  // unless there is something in the dependency array\n  const fetchTodos = useCallback(async () => {\n    const response = await axios.get('http://localhost:3001/todos');\n    setTodos(response.data);\n  }, []);\n\n  // not usually done in production but probably more clear\n  // const stableFetchTodos = useCallback(fetchTodos, [])\n\n  const createTodo = async title => {\n    const response = await axios.post('http://localhost:3001/todos', {\n      title\n    });\n    const updatedTodos = [...todos, response.data];\n    setTodos(updatedTodos);\n  };\n  const editTodoById = async (id, newTitle) => {\n    const response = await axios.put(`http://localhost:3001/todos/${id}`, {\n      title: newTitle\n    });\n    const updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        return {\n          ...todo,\n          ...response.data\n        };\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n  const deleteTodoById = async id => {\n    await axios.delete(`http://localhost:3001/todos/${id}`);\n    const updatedTodos = todos.filter(todo => {\n      return todo.id !== id;\n    });\n    setTodos(updatedTodos);\n  };\n  const contextValues = {\n    todos,\n    fetchTodos,\n    createTodo,\n    editTodoById,\n    deleteTodoById\n  };\n  return /*#__PURE__*/_jsxDEV(TodoContext.Provider, {\n    value: contextValues,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(Provider, \"Vx0C3OmJM4X7oCEOQl6ou6jgqfk=\");\n_c = Provider;\nexport { Provider };\nexport default TodoContext;\n\n// import both in the same file\n// import TodoContext, {Provider} from './*'\nvar _c;\n$RefreshReg$(_c, \"Provider\");","map":{"version":3,"names":["axios","createContext","useState","useCallback","jsxDEV","_jsxDEV","TodoContext","Provider","children","_s","todos","setTodos","fetchTodos","response","get","data","createTodo","title","post","updatedTodos","editTodoById","id","newTitle","put","map","todo","deleteTodoById","delete","filter","contextValues","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/synakhanna/Desktop/mobile_app_class/to-do-list/todo-v3 (midterm)/src/context/Todos.js"],"sourcesContent":["import axios from 'axios'\nimport {createContext, useState, useCallback} from 'react'\nconst TodoContext = createContext()\n\nfunction Provider({children}) {\n  const [todos, setTodos] = useState([])\n\n  // MUCH more common, wrap the funciton in useCallback inline\n  // useCallback memoizes fetchTodos one copy in memory and we always\n  // reference the same slot in computer's memory so it SHOULD never update\n  // unless there is something in the dependency array\n  const fetchTodos = useCallback(async () => {\n    const response = await axios.get('http://localhost:3001/todos')\n    setTodos(response.data)\n  }, [])\n\n  // not usually done in production but probably more clear\n  // const stableFetchTodos = useCallback(fetchTodos, [])\n\n  const createTodo = async (title) => {\n    const response = await axios.post('http://localhost:3001/todos', {title})\n    const updatedTodos = [...todos, response.data]\n    setTodos(updatedTodos)\n  }\n\n  const editTodoById = async (id, newTitle) => {\n    const response = await axios.put(`http://localhost:3001/todos/${id}`, {\n      title: newTitle,\n    })\n\n    const updatedTodos = todos.map((todo) => {\n      if (todo.id === id) {\n        return {...todo, ...response.data}\n      }\n      return todo\n    })\n    setTodos(updatedTodos)\n  }\n\n  const deleteTodoById = async (id) => {\n    await axios.delete(`http://localhost:3001/todos/${id}`)\n\n    const updatedTodos = todos.filter((todo) => {\n      return todo.id !== id\n    })\n\n    setTodos(updatedTodos)\n  }\n\n  const contextValues = {\n    todos,\n    fetchTodos,\n    createTodo,\n    editTodoById,\n    deleteTodoById,\n  }\n\n  return (\n    <TodoContext.Provider value={contextValues}>\n      {children}\n    </TodoContext.Provider>\n  )\n}\n\nexport {Provider}\nexport default TodoContext\n\n// import both in the same file\n// import TodoContext, {Provider} from './*'\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,aAAa,EAAEC,QAAQ,EAAEC,WAAW,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAC1D,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAEnC,SAASM,QAAQA,CAAC;EAACC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EAC5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA;EACA;EACA;EACA,MAAMU,UAAU,GAAGT,WAAW,CAAC,YAAY;IACzC,MAAMU,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,6BAA6B,CAAC;IAC/DH,QAAQ,CAACE,QAAQ,CAACE,IAAI,CAAC;EACzB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;;EAEA,MAAMC,UAAU,GAAG,MAAOC,KAAK,IAAK;IAClC,MAAMJ,QAAQ,GAAG,MAAMb,KAAK,CAACkB,IAAI,CAAC,6BAA6B,EAAE;MAACD;IAAK,CAAC,CAAC;IACzE,MAAME,YAAY,GAAG,CAAC,GAAGT,KAAK,EAAEG,QAAQ,CAACE,IAAI,CAAC;IAC9CJ,QAAQ,CAACQ,YAAY,CAAC;EACxB,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAOC,EAAE,EAAEC,QAAQ,KAAK;IAC3C,MAAMT,QAAQ,GAAG,MAAMb,KAAK,CAACuB,GAAG,CAAC,+BAA+BF,EAAE,EAAE,EAAE;MACpEJ,KAAK,EAAEK;IACT,CAAC,CAAC;IAEF,MAAMH,YAAY,GAAGT,KAAK,CAACc,GAAG,CAAEC,IAAI,IAAK;MACvC,IAAIA,IAAI,CAACJ,EAAE,KAAKA,EAAE,EAAE;QAClB,OAAO;UAAC,GAAGI,IAAI;UAAE,GAAGZ,QAAQ,CAACE;QAAI,CAAC;MACpC;MACA,OAAOU,IAAI;IACb,CAAC,CAAC;IACFd,QAAQ,CAACQ,YAAY,CAAC;EACxB,CAAC;EAED,MAAMO,cAAc,GAAG,MAAOL,EAAE,IAAK;IACnC,MAAMrB,KAAK,CAAC2B,MAAM,CAAC,+BAA+BN,EAAE,EAAE,CAAC;IAEvD,MAAMF,YAAY,GAAGT,KAAK,CAACkB,MAAM,CAAEH,IAAI,IAAK;MAC1C,OAAOA,IAAI,CAACJ,EAAE,KAAKA,EAAE;IACvB,CAAC,CAAC;IAEFV,QAAQ,CAACQ,YAAY,CAAC;EACxB,CAAC;EAED,MAAMU,aAAa,GAAG;IACpBnB,KAAK;IACLE,UAAU;IACVI,UAAU;IACVI,YAAY;IACZM;EACF,CAAC;EAED,oBACErB,OAAA,CAACC,WAAW,CAACC,QAAQ;IAACuB,KAAK,EAAED,aAAc;IAAArB,QAAA,EACxCA;EAAQ;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B;AAACzB,EAAA,CA1DQF,QAAQ;AAAA4B,EAAA,GAAR5B,QAAQ;AA4DjB,SAAQA,QAAQ;AAChB,eAAeD,WAAW;;AAE1B;AACA;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}