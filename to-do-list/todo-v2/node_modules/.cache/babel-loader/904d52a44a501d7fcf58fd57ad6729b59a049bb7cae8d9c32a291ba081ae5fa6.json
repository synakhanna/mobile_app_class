{"ast":null,"code":"var _jsxFileName = \"/Users/synakhanna/Desktop/mobile_app_class/to-do-list/todo-v2/src/components/TodoEdit.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoEdit = props => {\n  _s();\n  //  FIRST PASS USE OnEDIT\n  // const {todo, onEdit} = props\n\n  // LAST use onSubmit instead after updating TodoItem\n  const {\n    todo,\n    onSubmit\n  } = props;\n\n  // make form, bind input, THEN when its working update default state\n  // todoedit needs our todo as a prop\n  const [title, setTitle] = useState(todo.title);\n  const handleChange = event => {\n    setTitle(event.target.value);\n  };\n\n  // DO FIRST, Then remove in favor of onSubmit fromm parent\n  /*\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    // console.log('new title is: ', title)\n    // OK we need to define the real state updater all the way back up at APP\n    // NOTE title here is from the form input\n      onEdit(todo.id, title)\n      // still missing a feature, hide the TodoEdit on save, now we need to do 2 things here\n  }\n  */\n\n  // FINAL Edit the TODO and Close the Form we have an OnEdit and OnSubmit,\n  // this might get confusing to another dev on the project, whats the differce? they are both called on Submit\n  // GO TO TodoITEM HANDLESUBMIT definition and pass it here as onSubmit\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit(todo.id, title);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Title:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: handleChange,\n      value: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoEdit, \"eXiczbPafqE65bMv3/pn6jFBvO4=\");\n_c = TodoEdit;\nexport default TodoEdit;\nvar _c;\n$RefreshReg$(_c, \"TodoEdit\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","TodoEdit","props","_s","todo","onSubmit","title","setTitle","handleChange","event","target","value","handleSubmit","preventDefault","id","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","_c","$RefreshReg$"],"sources":["/Users/synakhanna/Desktop/mobile_app_class/to-do-list/todo-v2/src/components/TodoEdit.js"],"sourcesContent":["import {useState} from 'react'\nconst TodoEdit = (props) => {\n  //  FIRST PASS USE OnEDIT\n  // const {todo, onEdit} = props\n\n  // LAST use onSubmit instead after updating TodoItem\n  const {todo, onSubmit} = props\n\n  // make form, bind input, THEN when its working update default state\n  // todoedit needs our todo as a prop\n  const [title, setTitle] = useState(todo.title)\n\n  const handleChange = (event) => {\n    setTitle(event.target.value)\n  }\n\n  // DO FIRST, Then remove in favor of onSubmit fromm parent\n  /*\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    // console.log('new title is: ', title)\n    // OK we need to define the real state updater all the way back up at APP\n    // NOTE title here is from the form input\n\n\n    onEdit(todo.id, title)\n\n\n    // still missing a feature, hide the TodoEdit on save, now we need to do 2 things here\n  }\n*/\n\n  // FINAL Edit the TODO and Close the Form we have an OnEdit and OnSubmit,\n  // this might get confusing to another dev on the project, whats the differce? they are both called on Submit\n  // GO TO TodoITEM HANDLESUBMIT definition and pass it here as onSubmit\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    onSubmit(todo.id, title)\n  }\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>Title:</label>\n      <input type=\"text\" onChange={handleChange} value={title} />\n      <button>Update</button>\n    </form>\n  )\n}\n\nexport default TodoEdit\n"],"mappings":";;AAAA,SAAQA,QAAQ,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAC9B,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC1B;EACA;;EAEA;EACA,MAAM;IAACC,IAAI;IAAEC;EAAQ,CAAC,GAAGH,KAAK;;EAE9B;EACA;EACA,MAAM,CAACI,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAACM,IAAI,CAACE,KAAK,CAAC;EAE9C,MAAME,YAAY,GAAIC,KAAK,IAAK;IAC9BF,QAAQ,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC9B,CAAC;;EAED;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAME;EACA;EACA;EACA,MAAMC,YAAY,GAAIH,KAAK,IAAK;IAC9BA,KAAK,CAACI,cAAc,CAAC,CAAC;IACtBR,QAAQ,CAACD,IAAI,CAACU,EAAE,EAAER,KAAK,CAAC;EAC1B,CAAC;EACD,oBACEN,OAAA;IAAMK,QAAQ,EAAEO,YAAa;IAAAG,QAAA,gBAC3Bf,OAAA;MAAAe,QAAA,EAAO;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACrBnB,OAAA;MAAOoB,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAEb,YAAa;MAACG,KAAK,EAAEL;IAAM;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3DnB,OAAA;MAAAe,QAAA,EAAQ;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAEX,CAAC;AAAAhB,EAAA,CA7CKF,QAAQ;AAAAqB,EAAA,GAARrB,QAAQ;AA+Cd,eAAeA,QAAQ;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}