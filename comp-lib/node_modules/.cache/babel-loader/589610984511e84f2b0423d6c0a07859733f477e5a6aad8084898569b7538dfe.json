{"ast":null,"code":"var _jsxFileName = \"/Users/synakhanna/Desktop/mobile_app_class/comp-lib/src/components/Button.js\";\nimport cx from 'classnames';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Button(props) {\n  const {\n    children,\n    primary,\n    secondary,\n    success,\n    warning,\n    danger,\n    outline,\n    rounded,\n    ...otherProps\n  } = props;\n  const classes = cx(otherProps.className, 'flex items-center px-8 py-3 border', {\n    'bg-blue-500 border-blue-500 text-white': primary,\n    'bg-gray-900 border-gray-900 text-white': secondary,\n    'bg-green-500 border-green-500 text-white': success,\n    'bg-orange-400 border-orange-500 text-white': warning,\n    'bg-red-600 border-red-700 text-white': danger,\n    // rounded\n    'rounded-full': rounded,\n    // outline\n    'bg-white': outline,\n    // outline variation text color\n    'text-blue-500': outline && primary,\n    'text-gray-900': outline && secondary,\n    'text-green-500': outline && success,\n    'text-orange-400': outline && danger,\n    'text-red-600': outline && warning\n  });\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    ...otherProps,\n    className: classes,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_c = Button;\nButton.propTypes = {\n  checkVariationValue: ({\n    primary,\n    secondary,\n    success,\n    warning,\n    danger\n  }) => {\n    const count = Number(!!primary) + Number(!!secondary) + Number(!!success) + Number(!!warning) + Number(!!danger);\n    if (count > 1) {\n      return new Error('Only one of primary, secondary, success, warning, danger can be true!');\n    }\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["cx","jsxDEV","_jsxDEV","Button","props","children","primary","secondary","success","warning","danger","outline","rounded","otherProps","classes","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","checkVariationValue","count","Number","Error","$RefreshReg$"],"sources":["/Users/synakhanna/Desktop/mobile_app_class/comp-lib/src/components/Button.js"],"sourcesContent":["import cx from 'classnames'\n\nexport default function Button(props) {\n  const {\n    children,\n    primary,\n    secondary,\n    success,\n    warning,\n    danger,\n    outline,\n    rounded,\n    ...otherProps\n  } = props\n\n  const classes = cx(\n    otherProps.className,\n    'flex items-center px-8 py-3 border',\n    {\n      'bg-blue-500 border-blue-500 text-white': primary,\n      'bg-gray-900 border-gray-900 text-white': secondary,\n      'bg-green-500 border-green-500 text-white': success,\n      'bg-orange-400 border-orange-500 text-white': warning,\n      'bg-red-600 border-red-700 text-white': danger,\n      // rounded\n      'rounded-full': rounded,\n      // outline\n      'bg-white': outline,\n      // outline variation text color\n      'text-blue-500': outline && primary,\n      'text-gray-900': outline && secondary,\n      'text-green-500': outline && success,\n      'text-orange-400': outline && danger,\n      'text-red-600': outline && warning,\n    }\n  )\n\n  return (\n    <button {...otherProps} className={classes}>\n      {children}\n    </button>\n  )\n}\n\nButton.propTypes = {\n  checkVariationValue: ({primary, secondary, success, warning, danger}) => {\n    const count =\n      Number(!!primary) +\n      Number(!!secondary) +\n      Number(!!success) +\n      Number(!!warning) +\n      Number(!!danger)\n\n    if (count > 1) {\n      return new Error(\n        'Only one of primary, secondary, success, warning, danger can be true!'\n      )\n    }\n  },\n}\n"],"mappings":";AAAA,OAAOA,EAAE,MAAM,YAAY;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3B,eAAe,SAASC,MAAMA,CAACC,KAAK,EAAE;EACpC,MAAM;IACJC,QAAQ;IACRC,OAAO;IACPC,SAAS;IACTC,OAAO;IACPC,OAAO;IACPC,MAAM;IACNC,OAAO;IACPC,OAAO;IACP,GAAGC;EACL,CAAC,GAAGT,KAAK;EAET,MAAMU,OAAO,GAAGd,EAAE,CAChBa,UAAU,CAACE,SAAS,EACpB,oCAAoC,EACpC;IACE,wCAAwC,EAAET,OAAO;IACjD,wCAAwC,EAAEC,SAAS;IACnD,0CAA0C,EAAEC,OAAO;IACnD,4CAA4C,EAAEC,OAAO;IACrD,sCAAsC,EAAEC,MAAM;IAC9C;IACA,cAAc,EAAEE,OAAO;IACvB;IACA,UAAU,EAAED,OAAO;IACnB;IACA,eAAe,EAAEA,OAAO,IAAIL,OAAO;IACnC,eAAe,EAAEK,OAAO,IAAIJ,SAAS;IACrC,gBAAgB,EAAEI,OAAO,IAAIH,OAAO;IACpC,iBAAiB,EAAEG,OAAO,IAAID,MAAM;IACpC,cAAc,EAAEC,OAAO,IAAIF;EAC7B,CACF,CAAC;EAED,oBACEP,OAAA;IAAA,GAAYW,UAAU;IAAEE,SAAS,EAAED,OAAQ;IAAAT,QAAA,EACxCA;EAAQ;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEb;AAACC,EAAA,GAxCuBjB,MAAM;AA0C9BA,MAAM,CAACkB,SAAS,GAAG;EACjBC,mBAAmB,EAAEA,CAAC;IAAChB,OAAO;IAAEC,SAAS;IAAEC,OAAO;IAAEC,OAAO;IAAEC;EAAM,CAAC,KAAK;IACvE,MAAMa,KAAK,GACTC,MAAM,CAAC,CAAC,CAAClB,OAAO,CAAC,GACjBkB,MAAM,CAAC,CAAC,CAACjB,SAAS,CAAC,GACnBiB,MAAM,CAAC,CAAC,CAAChB,OAAO,CAAC,GACjBgB,MAAM,CAAC,CAAC,CAACf,OAAO,CAAC,GACjBe,MAAM,CAAC,CAAC,CAACd,MAAM,CAAC;IAElB,IAAIa,KAAK,GAAG,CAAC,EAAE;MACb,OAAO,IAAIE,KAAK,CACd,uEACF,CAAC;IACH;EACF;AACF,CAAC;AAAA,IAAAL,EAAA;AAAAM,YAAA,CAAAN,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}