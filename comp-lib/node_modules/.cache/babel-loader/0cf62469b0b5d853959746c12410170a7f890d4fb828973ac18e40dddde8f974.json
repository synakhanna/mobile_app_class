{"ast":null,"code":"var _jsxFileName = \"/Users/synakhanna/Desktop/mobile_app_class/comp-lib/src/components/Modal.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Modal = ({\n  children,\n  isOpen,\n  onClose\n}) => {\n  _s();\n  const [modalRoot, setModalRoot] = useState(null);\n\n  // Ensure the modalRoot is set after component mounts\n  useEffect(() => {\n    const modalContainer = document.getElementById('modal-root');\n    if (modalContainer) {\n      setModalRoot(modalContainer);\n    }\n  }, []);\n  if (!isOpen || !modalRoot) {\n    return null; // Don't render the modal if it's not open or modal-root is missing\n  }\n  return /*#__PURE__*/ReactDOM.createPortal(/*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      backgroundColor: 'rgba(0, 0, 0, 0.5)',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    onClick: onClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: 'white',\n        padding: '20px',\n        borderRadius: '8px',\n        maxWidth: '500px',\n        width: '100%'\n      },\n      onClick: e => e.stopPropagation(),\n      children: [children, /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          marginTop: '10px',\n          backgroundColor: '#ff5f5f',\n          color: 'white',\n          border: 'none',\n          padding: '5px 10px',\n          borderRadius: '5px',\n          cursor: 'pointer'\n        },\n        onClick: onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this), modalRoot);\n};\n_s(Modal, \"VcRrtW/LN1yCnmlJGIAHxQeUyz0=\");\n_c = Modal;\nexport default Modal;\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["useEffect","useState","ReactDOM","jsxDEV","_jsxDEV","Modal","children","isOpen","onClose","_s","modalRoot","setModalRoot","modalContainer","document","getElementById","createPortal","style","position","top","left","right","bottom","backgroundColor","display","justifyContent","alignItems","onClick","background","padding","borderRadius","maxWidth","width","e","stopPropagation","marginTop","color","border","cursor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/synakhanna/Desktop/mobile_app_class/comp-lib/src/components/Modal.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Modal = ({ children, isOpen, onClose }) => {\n  const [modalRoot, setModalRoot] = useState(null);\n\n  // Ensure the modalRoot is set after component mounts\n  useEffect(() => {\n    const modalContainer = document.getElementById('modal-root');\n    if (modalContainer) {\n      setModalRoot(modalContainer);\n    }\n  }, []);\n\n  if (!isOpen || !modalRoot) {\n    return null; // Don't render the modal if it's not open or modal-root is missing\n  }\n\n  return ReactDOM.createPortal(\n    <div \n      style={{\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      }} \n      onClick={onClose}\n    >\n      <div \n        style={{\n          background: 'white',\n          padding: '20px',\n          borderRadius: '8px',\n          maxWidth: '500px',\n          width: '100%'\n        }}\n        onClick={(e) => e.stopPropagation()}\n      >\n        {children}\n        <button \n          style={{\n            marginTop: '10px',\n            backgroundColor: '#ff5f5f',\n            color: 'white',\n            border: 'none',\n            padding: '5px 10px',\n            borderRadius: '5px',\n            cursor: 'pointer'\n          }}\n          onClick={onClose}\n        >\n          Close\n        </button>\n      </div>\n    </div>,\n    modalRoot\n  );\n};\n\nexport default Modal;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,QAAQ,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,KAAK,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,MAAM;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC/C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;;EAEhD;EACAD,SAAS,CAAC,MAAM;IACd,MAAMY,cAAc,GAAGC,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC;IAC5D,IAAIF,cAAc,EAAE;MAClBD,YAAY,CAACC,cAAc,CAAC;IAC9B;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,IAAI,CAACL,MAAM,IAAI,CAACG,SAAS,EAAE;IACzB,OAAO,IAAI,CAAC,CAAC;EACf;EAEA,oBAAOR,QAAQ,CAACa,YAAY,cAC1BX,OAAA;IACEY,KAAK,EAAE;MACLC,QAAQ,EAAE,OAAO;MACjBC,GAAG,EAAE,CAAC;MACNC,IAAI,EAAE,CAAC;MACPC,KAAK,EAAE,CAAC;MACRC,MAAM,EAAE,CAAC;MACTC,eAAe,EAAE,oBAAoB;MACrCC,OAAO,EAAE,MAAM;MACfC,cAAc,EAAE,QAAQ;MACxBC,UAAU,EAAE;IACd,CAAE;IACFC,OAAO,EAAElB,OAAQ;IAAAF,QAAA,eAEjBF,OAAA;MACEY,KAAK,EAAE;QACLW,UAAU,EAAE,OAAO;QACnBC,OAAO,EAAE,MAAM;QACfC,YAAY,EAAE,KAAK;QACnBC,QAAQ,EAAE,OAAO;QACjBC,KAAK,EAAE;MACT,CAAE;MACFL,OAAO,EAAGM,CAAC,IAAKA,CAAC,CAACC,eAAe,CAAC,CAAE;MAAA3B,QAAA,GAEnCA,QAAQ,eACTF,OAAA;QACEY,KAAK,EAAE;UACLkB,SAAS,EAAE,MAAM;UACjBZ,eAAe,EAAE,SAAS;UAC1Ba,KAAK,EAAE,OAAO;UACdC,MAAM,EAAE,MAAM;UACdR,OAAO,EAAE,UAAU;UACnBC,YAAY,EAAE,KAAK;UACnBQ,MAAM,EAAE;QACV,CAAE;QACFX,OAAO,EAAElB,OAAQ;QAAAF,QAAA,EAClB;MAED;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC,EACN/B,SACF,CAAC;AACH,CAAC;AAACD,EAAA,CA3DIJ,KAAK;AAAAqC,EAAA,GAALrC,KAAK;AA6DX,eAAeA,KAAK;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}